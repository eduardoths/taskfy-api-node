generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String          @id @default(uuid())
  isAdmin        Boolean         @default(false)
  firstName      String
  lastName       String
  username       String          @unique
  email          String          @unique
  passwordHash   String
  organizationId String
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
  Organization   Organization    @relation(fields: [organizationId], references: [id])
  Managers       Manager[]
  Tasks          Task[]
  Boards         UsersOnBoards[]

  @@map("users")
}

model Organization {
  id          String   @id @default(uuid())
  companyName String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  users       User[]

  @@map("organizations")
}

model Manager {
  managerId String
  boardId   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Board     Board    @relation(fields: [boardId], references: [id])
  User      User     @relation(fields: [managerId], references: [id])

  @@id([managerId, boardId])
  @@map("managers")
}

model UsersOnBoards {
  id        String   @id @default(uuid())
  boardId   String
  userId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Board     Board    @relation(fields: [boardId], references: [id])
  User      User     @relation(fields: [userId], references: [id])

  @@map("virtual_boards")
}

model Board {
  id        String          @id @default(uuid())
  name      String
  color     String
  createdAt DateTime        @default(now())
  updatedAt DateTime        @updatedAt
  lists     List[]
  manager   Manager[]
  users     UsersOnBoards[]

  @@map("boards")
}

model List {
  id        String   @id @default(uuid())
  name      String
  boardId   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Board     Board    @relation(fields: [boardId], references: [id])
  tasks     Task[]

  @@map("lists")
}

model Task {
  id        String   @id @default(uuid())
  name      String
  userId    String
  listId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  List      List     @relation(fields: [listId], references: [id])
  User      User     @relation(fields: [userId], references: [id])

  @@map("tasks")
}
